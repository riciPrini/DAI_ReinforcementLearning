import matplotlib.pyplot as plt
import numpy as np
img_folder = "img"
filename_learning = f"{img_folder}/TLC_naive_dqn.png"
filename_waiting = f"{img_folder}/waiting_time.png"
filename_avg_reward = f"{img_folder}/avg_reward.png"
filename_epsilon_decay = f"{img_folder}/epsilon_decay.png"
filename_throughput = f"{img_folder}/avg_throughput.png"
def plot_imgs(n_games,y,steps_array,eps_history,avg_wait_times_history,avg_rewards_history,avg_throughput):
    plot_learning_curve(steps_array, y, eps_history, filename_learning)
    plot_history_times(n_games,avg_wait_times_history,filename_waiting,"Average Wait Time","Average Wait Time per Episode")
    plot_history_times(n_games,avg_rewards_history,filename_avg_reward,"Average Reward", "Average Reward per Episode")
    plot_history_times(n_games,eps_history,filename_epsilon_decay,"Epsilon Decay","Epsilon Decay per Episode")
    plot_history_times(n_games,avg_throughput,filename_throughput,"Average Throughput","Average Throughput per Episode")


def plot_learning_curve(x, scores, epsilons, filename, lines=None):
    print("Saving plot...")
    fig=plt.figure()
    ax=fig.add_subplot(111, label="1")
    ax2=fig.add_subplot(111, label="2", frame_on=False)

    ax.plot(x, epsilons, color="blue")
    ax.set_xlabel("Training Steps", color="blue")
    ax.set_ylabel("Epsilon", color="blue")
    ax.tick_params(axis='x', colors="blue")
    ax.tick_params(axis='y', colors="blue")

    N = len(scores)
    running_avg = np.empty(N)
    for t in range(N):
	    running_avg[t] = np.mean(scores[max(0, t-20):(t+1)])

    ax2.plot(x, running_avg, color="red")
    ax2.axes.get_xaxis().set_visible(False)
    ax2.yaxis.tick_right()
    ax2.set_ylabel('Score', color="red")
    ax2.yaxis.set_label_position('right')
    ax2.tick_params(axis='y', colors="red")

    if lines is not None:
        for line in lines:
            plt.axvline(x=line)

    plt.savefig(filename)

def plot_history_times(x,avg_wait,filename,label,title):
    # print(avg_wait)
    # print(x)
    print("Saving plot...")
    plt.figure()
    plt.plot(range(x), avg_wait, label='Average Wait Time')
    plt.xlabel('Episodes')
    plt.ylabel(label)
    plt.title(title)
    plt.legend()
    plt.savefig(filename)


def plot_compare():
    sumo = [0.0, 0.0, 0.0, 1.15, 3.85, 0.15, 0.95, 2.55, 5.1, 8.55, 0.45, 13.0, 20.75, 30.35, 5.45, 0.8, 2.45, 4.8, 8.4, 0.55, 12.9, 21.1, 30.9, 5.15, 1.1, 2.8, 5.3, 8.75, 0.75, 13.5, 21.0, 30.6, 6.6, 0.8, 2.55, 5.05, 8.4, 0.8, 13.25, 21.5, 31.4, 6.6, 0.2, 1.25, 3.25, 6.3, 0.4, 10.25, 17.65, 26.75, 5.5, 0.9, 2.65, 5.2, 8.65, 0.5, 13.45, 21.75, 31.75, 6.85, 0.75, 2.3, 4.8, 8.2, 0.75, 12.3, 20.05, 29.65, 6.8, 0.9, 2.6, 5.15, 8.55, 0.4, 13.05, 21.3, 31.25, 6.75, 0.85, 2.35, 4.85, 8.35, 0.95, 13.3, 21.3, 31.25, 6.8, 0.8, 2.4, 5.1, 8.55, 0.75, 13.55, 21.8, 31.8, 6.55, 0.4, 1.45, 3.45, 6.4, 0.95, 11.5, 19.35, 28.85, 5.2, 0.75, 2.3, 4.7, 8.15, 0.55, 12.9, 21.15, 31.4, 6.8, 0.9, 2.5, 5.05, 8.45, 1.4, 14.25, 22.95, 33.65, 7.35, 0.9, 2.5, 5.05, 8.4, 0.55, 12.85, 21.0, 30.85, 6.65, 1.0, 2.65, 5.15, 8.65, 1.05, 13.8, 21.75, 31.65, 6.7, 0.95, 2.75, 5.3, 8.85, 0.55, 13.4, 21.75, 31.9, 6.9, 0.9, 2.55, 5.05, 8.5, 0.65, 12.25, 19.65, 29.05, 6.7, 0.9, 2.6, 5.15, 8.5, 0.65, 13.2, 21.5, 31.45, 6.95, 1.65, 3.85, 6.9, 10.9, 0.65, 15.3, 23.25, 33.25, 6.65, 0.8, 2.45, 4.9, 8.4, 0.75, 13.1, 21.25, 31.0, 5.1, 0.15, 1.25, 3.25, 6.2, 0.65, 10.35, 17.6, 26.55, 5.25, 0.8, 2.45, 4.9, 8.25, 0.55, 12.65, 20.95, 31.1, 5.35, 0.35, 1.45, 3.45, 6.45, 0.55, 10.25, 17.65, 26.6, 5.2, 0.7, 2.4, 4.95, 8.3, 0.7, 13.55, 21.85, 31.7, 6.65, 0.25, 1.4, 3.4, 6.35, 0.7, 10.6, 17.8, 26.7, 5.0, 0.85, 2.6, 5.15, 8.65, 0.35, 12.7, 20.55, 30.4, 6.4, 0.95, 2.5, 5.0, 8.35, 0.6, 12.85, 20.55, 30.0, 6.85, 0.8, 2.5, 5.05, 8.4, 0.55, 13.1, 21.2, 31.0, 6.65, 0.85, 2.45, 4.95, 8.35, 1.2, 13.25, 21.3, 31.3, 6.6, 0.85, 2.6, 5.15, 8.55, 0.5, 13.25, 21.4, 31.45, 6.9, 1.7, 3.8, 6.9, 10.9, 1.15, 16.45, 25.0, 35.4, 8.15, 0.8, 2.4, 5.0, 8.5, 0.7, 13.3, 21.7, 31.75, 7.0, 0.9, 2.5, 5.0, 8.45, 0.65, 12.45, 20.15, 29.25, 6.7, 0.8, 2.25, 4.75, 8.15, 0.8, 12.8, 20.95, 31.0, 5.05, 0.9, 2.35, 4.8, 8.25, 0.6, 12.3, 19.75, 29.35, 6.65, 0.85, 2.45, 5.0, 8.4, 0.7, 13.0, 20.9, 30.55, 6.6, 1.8, 3.9, 6.9, 10.9, 1.15, 16.35, 24.85, 35.35, 8.25, 0.85, 2.4, 4.85, 8.4, 0.6, 12.75, 20.75, 30.65, 6.7, 1.1, 2.8, 5.35, 8.8, 0.6, 13.25, 21.0, 30.65, 6.8, 0.95, 2.6, 5.25, 8.6, 0.55, 13.2, 21.4, 31.25, 5.0, 0.95, 2.55, 5.05, 8.55, 1.0, 13.9, 21.95, 32.3, 6.6, 0.85, 2.6, 5.1, 8.5, 0.6, 13.0, 21.2, 31.05, 6.45, 0.7, 2.2, 4.7, 8.0, 1.1, 12.85, 20.8, 30.7, 6.85, 0.7, 2.4, 5.0, 8.45, 0.6, 12.65, 20.75, 30.7, 6.5, 0.2, 1.3, 3.3, 6.3, 0.75, 10.4, 17.5, 26.35, 4.8, 0.95, 2.65, 5.35, 8.75, 0.75, 13.65, 21.95, 32.0, 6.75, 0.1, 1.25, 3.25, 6.0, 1.0, 10.8, 18.5, 27.7, 4.95, 0.85, 2.5, 4.95, 8.35, 0.5, 12.7, 20.9, 30.85, 6.55, 0.35, 1.45, 3.5, 6.45, 1.15, 11.6, 19.4, 29.0, 5.25, 0.85, 2.5, 5.1, 8.55, 0.25, 13.0, 21.15, 31.2, 6.75, 0.85, 2.5, 5.0, 8.3, 0.75, 12.35, 19.8, 29.25, 6.7, 0.9, 2.5, 5.15, 8.55, 0.6, 13.45, 21.65, 31.6, 6.55, 1.05, 2.65, 5.15, 8.65, 1.05, 13.9, 22.1, 32.2, 6.9, 0.95, 2.7, 5.15, 8.55, 0.2, 13.3, 21.75, 31.75, 7.0, 1.65, 3.85, 7.0, 11.0, 0.95, 16.55, 25.2, 35.75]
    rl = [0.0, 0.0, 0.0, 3.45, 11.55, 0.45, 2.85, 7.65, 15.3, 25.65, 1.35, 39.0, 62.25, 91.05, 16.35, 2.4, 7.35, 14.4, 25.2, 1.65, 38.7, 63.3, 92.7, 15.45, 3.3, 8.4, 15.9, 26.25, 2.25, 40.5, 63.0, 91.8, 19.8, 2.4, 7.65, 15.15, 25.2, 2.4, 39.75, 64.5, 94.2, 19.8, 0.6, 3.75, 9.75, 18.9, 1.2, 30.75, 52.95, 80.25, 16.5, 2.7, 7.95, 15.6, 25.95, 1.5, 40.35, 65.25, 95.25, 20.55, 2.25, 6.9, 14.4, 24.6, 2.25, 36.9, 60.15, 88.95, 20.4, 2.7, 7.8, 15.45, 25.65, 1.2, 39.15, 63.9, 93.75, 20.25, 2.55, 7.05, 14.55, 25.05, 2.85, 39.9, 63.9, 93.75, 20.4, 2.4, 7.2, 15.3, 25.65, 2.25, 40.65, 65.4, 95.4, 19.65, 1.2, 4.35, 10.35, 19.2, 2.85, 34.5, 58.05, 86.55, 15.6, 2.25, 6.9, 14.1, 24.45, 1.65, 38.7, 63.45, 94.2, 20.4, 2.7, 7.5, 15.15, 25.35, 4.2, 42.75, 68.85, 100.95, 22.05, 2.7, 7.5, 15.15, 25.2, 1.65, 38.55, 63.0, 92.55, 19.95, 3.0, 7.95, 15.45, 25.95, 3.15, 41.4, 65.25, 94.95, 20.1, 2.85, 8.25, 15.9, 26.55, 1.65, 40.2, 65.25, 95.7, 20.7, 2.7, 7.65, 15.15, 25.5, 1.95, 36.75, 58.95, 87.15, 20.1, 2.7, 7.8, 15.45, 25.5, 1.95, 39.6, 64.5, 94.35, 20.85, 4.95, 11.55, 20.7, 32.7, 1.95, 45.9, 69.75, 99.75, 19.95, 2.4, 7.35, 14.7, 25.2, 2.25, 39.3, 63.75, 93.0, 15.3, 0.45, 3.75, 9.75, 18.6, 1.95, 31.05, 52.8, 79.65, 15.75, 2.4, 7.35, 14.7, 24.75, 1.65, 37.95, 62.85, 93.3, 16.05, 1.05, 4.35, 10.35, 19.35, 1.65, 30.75, 52.95, 79.8, 15.6, 2.1, 7.2, 14.85, 24.9, 2.1, 40.65, 65.55, 95.1, 19.95, 0.75, 4.2, 10.2, 19.05, 2.1, 31.8, 53.4, 80.1, 15.0, 2.55, 7.8, 15.45, 25.95, 1.05, 38.1, 61.65, 91.2, 19.2, 2.85, 7.5, 15.0, 25.05, 1.8, 38.55, 61.65, 90.0, 20.55, 2.4, 7.5, 15.15, 25.2, 1.65, 39.3, 63.6, 93.0, 19.95, 2.55, 7.35, 14.85, 25.05, 3.6, 39.75, 63.9, 93.9, 19.8, 2.55, 7.8, 15.45, 25.65, 1.5, 39.75, 64.2, 94.35, 20.7, 5.1, 11.4, 20.7, 32.7, 3.45, 49.35, 75.0, 106.2, 24.45, 2.4, 7.2, 15.0, 25.5, 2.1, 39.9, 65.1, 95.25, 21.0, 2.7, 7.5, 15.0, 25.35, 1.95, 37.35, 60.45, 87.75, 20.1, 2.4, 6.75, 14.25, 24.45, 2.4, 38.4, 62.85, 93.0, 15.15, 2.7, 7.05, 14.4, 24.75, 1.8, 36.9, 59.25, 88.05, 19.95, 2.55, 7.35, 15.0, 25.2, 2.1, 39.0, 62.7, 91.65, 19.8, 5.4, 11.7, 20.7, 32.7, 3.45, 49.05, 74.55, 106.05, 24.75, 2.55, 7.2, 14.55, 25.2, 1.8, 38.25, 62.25, 91.95, 20.1, 3.3, 8.4, 16.05, 26.4, 1.8, 39.75, 63.0, 91.95, 20.4, 2.85, 7.8, 15.75, 25.8, 1.65, 39.6, 64.2, 93.75, 15.0, 2.85, 7.65, 15.15, 25.65, 3.0, 41.7, 65.85, 96.9, 19.8, 2.55, 7.8, 15.3, 25.5, 1.8, 39.0, 63.6, 93.15, 19.35, 2.1, 6.6, 14.1, 24.0, 3.3, 38.55, 62.4, 92.1, 20.55, 2.1, 7.2, 15.0, 25.35, 1.8, 37.95, 62.25, 92.1, 19.5, 0.6, 3.9, 9.9, 18.9, 2.25, 31.2, 52.5, 79.05, 14.4, 2.85, 7.95, 16.05, 26.25, 2.25, 40.95, 65.85, 96.0, 20.25, 0.3, 3.75, 9.75, 18.0, 3.0, 32.4, 55.5, 83.1, 14.85, 2.55, 7.5, 14.85, 25.05, 1.5, 38.1, 62.7, 92.55, 19.65, 1.05, 4.35, 10.5, 19.35, 3.45, 34.8, 58.2, 87.0, 15.75, 2.55, 7.5, 15.3, 25.65, 0.75, 39.0, 63.45, 93.6, 20.25, 2.55, 7.5, 15.0, 24.9, 2.25, 37.05, 59.4, 87.75, 20.1, 2.7, 7.5, 15.45, 25.65, 1.8, 40.35, 64.95, 94.8, 19.65, 3.15, 7.95, 15.45, 25.95, 3.15, 41.7, 66.3, 96.6, 20.7, 2.85, 8.1, 15.45, 25.65, 0.6, 39.9, 65.25, 95.25, 21.0, 4.95, 11.55, 21.0, 33.0, 2.85, 49.65, 75.6, 107.25]
    x = range(len(sumo))
    # Creazione del grafico
    # Creazione del grafico
    plt.figure(figsize=(8, 5))
    plt.plot(x, sumo, label="SUMO", color='blue')
    plt.plot(x, rl, label="RL",  color='green')
    # Gestione della scala
    plt.xlim(0, 250)  # Limiti per l'asse X
    # Personalizzazione del grafico
    plt.title("Confronto tra SUMO e RL", fontsize=14)
    plt.ylabel("Valore", fontsize=12)
    plt.legend(fontsize=12)
    plt.grid(True, linestyle='--', alpha=0.6)

    # Mostrare il grafico
    # plt.plot()
    plt.savefig(f"{img_folder}/compare.png")
