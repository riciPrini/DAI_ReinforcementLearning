import matplotlib.pyplot as plt
import numpy as np
img_folder = "img"
filename_learning = f"{img_folder}/TLC_naive_dqn.png"
filename_waiting = f"{img_folder}/waiting_time.png"
filename_avg_reward = f"{img_folder}/avg_reward.png"
filename_epsilon_decay = f"{img_folder}/epsilon_decay.png"
filename_throughput = f"{img_folder}/avg_throughput.png"

def plot_imgs(n_games,y,steps_array,eps_history,avg_wait_times_history,avg_rewards_history,avg_throughput):
    plot_learning_curve(steps_array, y, eps_history, filename_learning)
    plot_history_times(n_games,avg_wait_times_history,filename_waiting,"Average Wait Time","Average Wait Time per Episode")
    plot_history_times(n_games,avg_rewards_history,filename_avg_reward,"Average Reward", "Average Reward per Episode")
    plot_history_times(n_games,eps_history,filename_epsilon_decay,"Epsilon Decay","Epsilon Decay per Episode")
    plot_history_times(n_games,avg_throughput,filename_throughput,"Average Throughput","Average Throughput per Episode")


def plot_learning_curve(x, scores, epsilons, filename, lines=None):
    print("Saving plot...")
    fig=plt.figure()
    ax=fig.add_subplot(111, label="1")
    ax2=fig.add_subplot(111, label="2", frame_on=False)

    ax.plot(x, epsilons, color="blue")
    ax.set_xlabel("Training Steps", color="blue")
    ax.set_ylabel("Epsilon", color="blue")
    ax.tick_params(axis='x', colors="blue")
    ax.tick_params(axis='y', colors="blue")

    N = len(scores)
    running_avg = np.empty(N)
    for t in range(N):
	    running_avg[t] = np.mean(scores[max(0, t-20):(t+1)])

    ax2.plot(x, running_avg, color="red")
    ax2.axes.get_xaxis().set_visible(False)
    ax2.yaxis.tick_right()
    ax2.set_ylabel('Score', color="red")
    ax2.yaxis.set_label_position('right')
    ax2.tick_params(axis='y', colors="red")

    if lines is not None:
        for line in lines:
            plt.axvline(x=line)

    plt.savefig(filename)

def plot_history_times(x,avg_wait,filename,label,title):
    # print(avg_wait)
    # print(x)
    print("Saving plot...")
    plt.figure()
    plt.plot(range(x), avg_wait, label='Average Wait Time')
    plt.xlabel('Episodes')
    plt.ylabel(label)
    plt.title(title)
    plt.legend()
    plt.savefig(filename)


def plot_compare():
    sumo = [0.0, 0.0, 0.0, 0.4, 1.9, 0.25, 1.6, 4.05, 7.35, 10.4, 0.35, 4.65, 8.95, 15.7, 0.0, 0.55, 4.45, 8.9, 12.4, 0.0, 6.65, 11.35, 15.0, 0.0, 0.15, 1.0, 2.7, 6.55, 0.0, 0.85, 3.6, 6.6, 0.0, 1.25, 6.35, 11.5, 16.85, 0.0, 0.35, 6.45, 9.5, 0.55, 0.8, 2.0, 4.0, 6.95, 0.25, 1.85, 5.35, 9.0, 0.0, 0.4, 1.8, 4.2, 8.65, 0.75, 6.45, 10.35, 13.55, 0.0, 0.95, 3.6, 6.1, 9.4, 0.5, 7.3, 13.7, 18.45, 0.3, 1.35, 9.0, 12.2, 16.35, 0.55, 4.45, 11.15, 15.4, 0.2, 0.7, 1.4, 2.95, 4.95, 1.25, 6.2, 9.85, 14.35, 0.15, 1.1, 4.7, 7.4, 10.7, 0.4, 6.25, 10.2, 15.3, 0.0, 1.05, 6.0, 9.55, 13.8, 0.0, 0.55, 8.0, 13.3, 0.1, 1.55, 3.55, 6.2, 10.6, 0.0, 8.7, 12.5, 16.0, 0.15, 1.35, 6.4, 11.25, 15.95, 0.4, 1.95, 8.85, 13.95, 0.0, 0.3, 1.95, 8.2, 12.15, 0.35, 4.05, 9.15, 13.15, 0.45, 2.2, 4.15, 9.55, 14.4, 0.0, 5.5, 12.15, 17.55, 0.0, 0.7, 7.75, 13.4, 23.45, 0.0, 5.15, 8.3, 13.2, 0.2, 1.1, 2.65, 8.3, 12.25, 0.4, 1.35, 4.0, 10.1, 0.2, 1.05, 2.6, 9.7, 14.3, 0.8, 9.35, 13.9, 19.85, 0.0, 0.45, 5.2, 9.6, 15.05, 2.35, 8.25, 12.05, 15.95, 0.0, 0.0, 0.5, 3.65, 6.35, 0.0, 2.45, 6.15, 9.65, 0.3, 2.15, 6.45, 13.3, 18.6, 0.5, 11.6, 17.2, 22.05, 0.4, 2.2, 5.4, 9.4, 14.15, 0.15, 8.9, 15.45, 21.45, 0.0, 0.85, 4.95, 8.05, 13.9, 0.85, 10.4, 17.4, 21.1, 0.15, 1.5, 5.75, 11.05, 15.35, 0.35, 1.25, 4.9, 8.1, 0.0, 0.75, 4.7, 8.55, 13.75, 0.0, 2.9, 7.4, 10.9, 0.15, 1.35, 7.75, 11.5, 15.5, 0.25, 3.6, 10.05, 15.5, 0.1, 1.2, 4.55, 10.95, 18.05, 0.0, 5.0, 11.0, 15.0, 0.3, 1.3, 3.1, 7.75, 10.45, 0.0, 7.65, 12.0, 16.95, 0.0, 0.2, 10.55, 15.45, 22.1, 0.0, 3.3, 9.8, 14.5, 0.35, 1.7, 7.35, 14.75, 20.85, 0.0, 8.65, 12.3, 18.0, 0.0, 0.65, 6.15, 9.1, 13.5, 0.0, 5.2, 8.5, 12.95, 0.15, 0.65, 6.4, 9.7, 14.4, 0.0, 6.2, 8.15, 11.05, 0.45, 1.25, 3.25, 6.25, 9.75, 0.35, 7.8, 14.75, 21.9, 0.15, 0.7, 2.25, 7.9, 11.4, 0.25, 7.05, 12.05, 16.4, 0.0, 0.5, 7.25, 12.45, 17.2, 0.4, 2.15, 4.75, 9.1, 0.15, 1.15, 2.7, 6.9, 11.45, 0.5, 2.1, 5.3, 8.8, 1.1, 0.75, 5.8, 8.55, 13.25, 0.85, 6.4, 13.7, 20.8, 0.0, 0.35, 0.85, 4.6, 7.8, 0.15, 2.65, 7.35, 11.1, 0.0, 0.6, 4.1, 6.4, 9.1, 0.4, 3.25, 8.5, 11.0, 0.15, 1.15, 3.6, 6.6, 10.4, 0.0, 6.9, 11.4, 15.9, 0.0, 0.0, 0.5, 2.0, 3.5, 0.5, 1.5, 4.1, 6.75, 0.0, 0.3, 3.35, 7.6, 12.7, 0.0, 1.1, 4.65, 8.15, 1.4, 0.8, 2.15, 4.9, 8.3, 0.15, 2.7, 6.45, 10.95, 1.55, 1.1, 4.2, 7.3, 7.4, 2.25, 8.95, 10.7, 15.25, 0.0, 0.6, 4.1, 11.25, 16.85, 0.35, 6.7, 11.8, 16.8, 0.0, 0.6, 5.1, 8.75, 12.3, 0.2, 7.7, 12.2, 20.35, 0.5, 2.9, 7.45, 16.5, 22.65, 0.6, 13.75, 22.55, 29.05, 2.25, 1.35, 6.8, 14.0, 19.5, 0.35, 3.05, 6.85, 9.7, 0.2, 1.1, 2.9, 8.5, 13.3, 0.0, 5.05, 9.15, 13.25, 0.0, 0.8, 5.9, 11.95, 16.05, 0.0, 5.75, 7.95, 11.05, 0.1, 1.1, 2.6, 5.4, 8.9, 0.95, 6.25, 10.3, 15.1, 0.9, 1.2, 4.7, 7.15, 13.1, 0.25, 8.4, 13.95, 18.7, 0.0, 0.7, 3.85, 11.3, 16.1, 0.0, 2.65, 5.15, 7.85, 0.15, 1.35, 4.5, 7.15, 10.85, 0.4, 4.2, 7.9, 11.4, 0.0, 0.1, 2.9, 5.05, 8.5, 0.25, 5.9, 11.1, 16.1]
    rl = [0.0, 0.0, 0.0, 1.2, 5.7, 0.75, 4.8, 12.15, 22.05, 31.2, 1.05, 13.95, 26.85, 47.1, 0.0, 1.65, 13.35, 26.7, 37.2, 0.0, 19.95, 34.05, 45.0, 0.0, 0.45, 3.0, 8.1, 19.65, 0.0, 2.55, 10.8, 19.8, 0.0, 3.75, 19.05, 34.5, 50.55, 0.0, 1.05, 19.35, 28.5, 1.65, 2.4, 6.0, 12.0, 20.85, 0.75, 5.55, 16.05, 27.0, 0.0, 1.2, 5.4, 12.6, 25.95, 2.25, 19.35, 31.05, 40.65, 0.0, 2.85, 10.8, 18.3, 28.2, 1.5, 21.9, 41.1, 55.35, 0.9, 4.05, 27.0, 36.6, 49.05, 1.65, 13.35, 33.45, 46.2, 0.6, 2.1, 4.2, 8.85, 14.85, 3.75, 18.6, 29.55, 43.05, 0.45, 3.3, 14.1, 22.2, 32.1, 1.2, 18.75, 30.6, 45.9, 0.0, 3.15, 18.0, 28.65, 41.4, 0.0, 1.65, 24.0, 39.9, 0.3, 4.65, 10.65, 18.6, 31.8, 0.0, 26.1, 37.5, 48.0, 0.45, 4.05, 19.2, 33.75, 47.85, 1.2, 5.85, 26.55, 41.85, 0.0, 0.9, 5.85, 24.6, 36.45, 1.05, 12.15, 27.45, 39.45, 1.35, 6.6, 12.45, 28.65, 43.2, 0.0, 16.5, 36.45, 52.65, 0.0, 2.1, 23.25, 40.2, 70.35, 0.0, 15.45, 24.9, 39.6, 0.6, 3.3, 7.95, 24.9, 36.75, 1.2, 4.05, 12.0, 30.3, 0.6, 3.15, 7.8, 29.1, 42.9, 2.4, 28.05, 41.7, 59.55, 0.0, 1.35, 15.6, 28.8, 45.15, 7.05, 24.75, 36.15, 47.85, 0.0, 0.0, 1.5, 10.95, 19.05, 0.0, 7.35, 18.45, 28.95, 0.9, 6.45, 19.35, 39.9, 55.8, 1.5, 34.8, 51.6, 66.15, 1.2, 6.6, 16.2, 28.2, 42.45, 0.45, 26.7, 46.35, 64.35, 0.0, 2.55, 14.85, 24.15, 41.7, 2.55, 31.2, 52.2, 63.3, 0.45, 4.5, 17.25, 33.15, 46.05, 1.05, 3.75, 14.7, 24.3, 0.0, 2.25, 14.1, 25.65, 41.25, 0.0, 8.7, 22.2, 32.7, 0.45, 4.05, 23.25, 34.5, 46.5, 0.75, 10.8, 30.15, 46.5, 0.3, 3.6, 13.65, 32.85, 54.15, 0.0, 15.0, 33.0, 45.0, 0.9, 3.9, 9.3, 23.25, 31.35, 0.0, 22.95, 36.0, 50.85, 0.0, 0.6, 31.65, 46.35, 66.3, 0.0, 9.9, 29.4, 43.5, 1.05, 5.1, 22.05, 44.25, 62.55, 0.0, 25.95, 36.9, 54.0, 0.0, 1.95, 18.45, 27.3, 40.5, 0.0, 15.6, 25.5, 38.85, 0.45, 1.95, 19.2, 29.1, 43.2, 0.0, 18.6, 24.45, 33.15, 1.35, 3.75, 9.75, 18.75, 29.25, 1.05, 23.4, 44.25, 65.7, 0.45, 2.1, 6.75, 23.7, 34.2, 0.75, 21.15, 36.15, 49.2, 0.0, 1.5, 21.75, 37.35, 51.6, 1.2, 6.45, 14.25, 27.3, 0.45, 3.45, 8.1, 20.7, 34.35, 1.5, 6.3, 15.9, 26.4, 3.3, 2.25, 17.4, 25.65, 39.75, 2.55, 19.2, 41.1, 62.4, 0.0, 1.05, 2.55, 13.8, 23.4, 0.45, 7.95, 22.05, 33.3, 0.0, 1.8, 12.3, 19.2, 27.3, 1.2, 9.75, 25.5, 33.0, 0.45, 3.45, 10.8, 19.8, 31.2, 0.0, 20.7, 34.2, 47.7, 0.0, 0.0, 1.5, 6.0, 10.5, 1.5, 4.5, 12.3, 20.25, 0.0, 0.9, 10.05, 22.8, 38.1, 0.0, 3.3, 13.95, 24.45, 4.2, 2.4, 6.45, 14.7, 24.9, 0.45, 8.1, 19.35, 32.85, 4.65, 3.3, 12.6, 21.9, 22.2, 6.75, 26.85, 32.1, 45.75, 0.0, 1.8, 12.3, 33.75, 50.55, 1.05, 20.1, 35.4, 50.4, 0.0, 1.8, 15.3, 26.25, 36.9, 0.6, 23.1, 36.6, 61.05, 1.5, 8.7, 22.35, 49.5, 67.95, 1.8, 41.25, 67.65, 87.15, 6.75, 4.05, 20.4, 42.0, 58.5, 1.05, 9.15, 20.55, 29.1, 0.6, 3.3, 8.7, 25.5, 39.9, 0.0, 15.15, 27.45, 39.75, 0.0, 2.4, 17.7, 35.85, 48.15, 0.0, 17.25, 23.85, 33.15, 0.3, 3.3, 7.8, 16.2, 26.7, 2.85, 18.75, 30.9, 45.3, 2.7, 3.6, 14.1, 21.45, 39.3, 0.75, 25.2, 41.85, 56.1, 0.0, 2.1, 11.55, 33.9, 48.3, 0.0, 7.95, 15.45, 23.55, 0.45, 4.05, 13.5, 21.45, 32.55, 1.2, 12.6, 23.7, 34.2, 0.0, 0.3, 8.7, 15.15, 25.5, 0.75, 17.7, 33.3, 48.3]

    x = range(len(sumo))
    # Creazione del grafico
    # Creazione del grafico
    plt.figure(figsize=(8, 5))
    plt.plot(x, sumo, label="SUMO", color='blue')
    plt.plot(x, rl, label="RL",  color='green')
    # Gestione della scala
    plt.xlim(0, 250)  # Limiti per l'asse X
    # Personalizzazione del grafico
    plt.title("Confronto tra SUMO e RL", fontsize=14)
    plt.ylabel("Valore", fontsize=12)
    plt.legend(fontsize=12)
    plt.grid(True, linestyle='--', alpha=0.6)

    # Mostrare il grafico
    # plt.plot()
    plt.savefig(f"{img_folder}/compare.png")
